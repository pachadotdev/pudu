[{"path":[]},{"path":"../pudu/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"../pudu/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"../pudu/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"../pudu/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within communications GitHub email, also applies individual expressing public spaces (e.g. social media).","code":""},{"path":"../pudu/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior reported forwarded legal authorities necessary.","code":""},{"path":"../pudu/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Questions contributions project require respect Code Conduct:","code":""},{"path":"../pudu/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"../pudu/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"../pudu/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"../pudu/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within project.","code":""},{"path":"../pudu/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"../pudu/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to cpp11eigen","title":"Contributing to cpp11eigen","text":"outlines propose change cpp11eigen. detailed info contributing , please see development contributing guide.","code":""},{"path":"../pudu/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to cpp11eigen","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"../pudu/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to cpp11eigen","text":"want make bigger change, ’s good idea first file issue make sure maintainer agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"../pudu/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to cpp11eigen","text":"Fork repository clone onto computer. haven’t done , use usethis::create_from_github(\"pachadotdev/cpp11eigen\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). Even better, use make check command line run checks clean environment. R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. extra sure run make clean && make install && make test discard don’t outdated binaries. Create Git branch pull request (PR). Use usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. Add description changes top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"../pudu/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to cpp11eigen","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. edit C++ code, please run make format apply clang format style CI fail. Use roxygen2, Markdown syntax, documentation. Use testthat unit tests. Contributions test cases included easier understand accept.","code":""},{"path":"../pudu/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to cpp11eigen","text":"Please note cpp11eigen project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"../pudu/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"../pudu/LICENSE.html","id":"1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"../pudu/LICENSE.html","id":"2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"../pudu/LICENSE.html","id":"3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"../pudu/LICENSE.html","id":"4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"../pudu/LICENSE.html","id":"5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"../pudu/LICENSE.html","id":"6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"../pudu/LICENSE.html","id":"7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"../pudu/LICENSE.html","id":"8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"../pudu/LICENSE.html","id":"9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"../pudu/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"../pudu/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with pudu","title":"Getting help with pudu","text":"Thanks using pudu! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"../pudu/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with pudu","text":"Start making minimal reproducible example using reprex package. reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"../pudu/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with pudu","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"../pudu/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with pudu","text":"can’t reproduce bug, can’t fix !","code":""},{"path":"../pudu/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mauricio Vargas Sepulveda. Author, maintainer. Munk School Global Affairs Public Policy. Funder.","code":""},{"path":"../pudu/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vargas Sepulveda M (2025). pudu: C++ Tools Cleaning Strings. R package version 0.1.0, https://github.com/pachadotdev/pudu, https://pacha.dev/pudu/.","code":"@Manual{,   title = {pudu: C++ Tools for Cleaning Strings},   author = {Mauricio {Vargas Sepulveda}},   year = {2025},   note = {R package version 0.1.0,      https://github.com/pachadotdev/pudu},   url = {https://pacha.dev/pudu/}, }"},{"path":[]},{"path":"../pudu/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"C++ Tools for Cleaning Strings","text":"goal pudu provide function declarations inline function definitions facilitate cleaning strings C++ code passing R. works cpp11::strings std::vector<std::string> objects. idea janitor package, C++ code. name Pudu? Pudu smallest deer planet Earth package tiny . original Pudu (unvectorized) drawn Pokanvas. package emerged spinoff redatam package cleaning strings C++ code.","code":""},{"path":"../pudu/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"C++ Tools for Cleaning Strings","text":"can install development version pudu :","code":"remotes::install_github(\"pachadotdev/pudu\")"},{"path":"../pudu/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"C++ Tools for Cleaning Strings","text":"can use functions package C++ code: Messy strings \" DEPTO. .REF_ID_ \" converted “depto_ref_id” “DEPTO. .REF_ID_”. following tests R give idea functions work:","code":"#include <cpp11.hpp> #include <pudu.hpp>  using namespace cpp11;  // Example 1  std::vector<std::string> x = {\" REGION NAME \"};  tidy_std_names(x); // returns 'REGION NAME'  // Example 2  tidy_std_vars(x); // returns 'region_name'  // Example 3  // test_tidy_r_names(\" REGION NAME \") returns 'REGION NAME' [[cpp11::register]] cpp11::writable::strings test_tidy_r_names(   const cpp11::strings& x) {   cpp11::writable::strings res = tidy_r_names(x);   return res; }  // Example 4  // test_tidy_r_names(\" REGION NAME \") returns 'region_name' [[cpp11::register]] cpp11::writable::strings test_tidy_r_vars(   const cpp11::strings& x) {   cpp11::writable::strings res = tidy_r_vars(x);   return res; } # German vars <- \"Gau\\xc3\\x9f\" expect_equal(test_tidy_r_names(vars), \"gau\") expect_equal(test_tidy_r_vars(vars), \"Gau\\u00df\")  # French vars <- \"c\\xc2\\xb4est-\\xc3\\xa0-dire\" expect_equal(test_tidy_r_names(vars), \"c_est_a_dire\") expect_equal(test_tidy_r_vars(vars), \"c\\u00b4est-\\u00e0-dire\")  # Spanish vars <- \"\\xc2\\xbfC\\xc3\\xb3mo est\\xc3\\xa1s\\x3f\" expect_equal(test_tidy_r_names(vars), \"como_estas\") expect_equal(test_tidy_r_vars(vars), \"\\u00bfC\\u00f3mo est\\u00e1s\\u003f\")  # Japanese vars <- \"Konnichiwa \\xe3\\x81\\x93\\xe3\\x82\\x93\\xe3\\x81\\xab\\xe3\\x81\\xa1\\xe3\\x81\\xaf\" expect_equal(test_tidy_r_names(vars), \"konnichiwa\") expect_equal(test_tidy_r_vars(vars), \"Konnichiwa \\u3053\\u3093\\u306b\\u3061\\u306f\")"},{"path":"../pudu/reference/cpp_vendor.html","id":null,"dir":"Reference","previous_headings":"","what":"Vendor the cpp11 and pudu dependency — cpp_vendor","title":"Vendor the cpp11 and pudu dependency — cpp_vendor","text":"Vendoring act making copy 3rd party packages project using. often used go language community.","code":""},{"path":"../pudu/reference/cpp_vendor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vendor the cpp11 and pudu dependency — cpp_vendor","text":"","code":"cpp_vendor(dir = NULL, subdir = \"/inst/include\")"},{"path":"../pudu/reference/cpp_vendor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vendor the cpp11 and pudu dependency — cpp_vendor","text":"dir directory vendor code . subdir subdirectory vendor code .","code":""},{"path":"../pudu/reference/cpp_vendor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vendor the cpp11 and pudu dependency — cpp_vendor","text":"file path vendored code (invisibly).","code":""},{"path":"../pudu/reference/cpp_vendor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vendor the cpp11 and pudu dependency — cpp_vendor","text":"function vendors cpp11 pudu package copying cpp11 pudu headers `inst/include` folder adding 'cpp11 version: XYZ' 'pudu version: XYZ' top files, XYZ version cpp11 pudu currently installed machine. Vendoring places responsibility updating code . Bugfixes new features cpp11 pudu available code run `cpp_vendor()` .","code":""},{"path":"../pudu/reference/cpp_vendor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vendor the cpp11 and pudu dependency — cpp_vendor","text":"","code":"# create a new directory dir <- tempdir() dir.create(dir) #> Warning: '/tmp/RtmpmerFPu' already exists  # vendor the cpp11 headers into the directory cpp_vendor(dir) #> Makevars and/or Makevars.win should have a line such as 'PKG_CPPFLAGS = -I../inst/include' #> DESCRIPTION should not have lines such as 'LinkingTo: cpp11'"},{"path":"../pudu/reference/pudu-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pudu: C++ Tools for Cleaning Strings — pudu-package","title":"pudu: C++ Tools for Cleaning Strings — pudu-package","text":"Provides function declarations inline function definitions facilitate cleaning strings C++ code passing R.","code":""},{"path":[]},{"path":"../pudu/reference/pudu-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pudu: C++ Tools for Cleaning Strings — pudu-package","text":"Maintainer: Mauricio Vargas Sepulveda m.sepulveda@mail.utoronto.ca (ORCID) contributors: Munk School Global Affairs Public Policy [funder]","code":""},{"path":"../pudu/news/index.html","id":"pudu-01","dir":"Changelog","previous_headings":"","what":"pudu 0.1","title":"pudu 0.1","text":"First version.","code":""}]
